name: dists

on:
  pull_request:
  push:
    branches: [master]
  release:
    types: [released, prereleased]
  workflow_dispatch:  # allows running workflow manually from the Actions tab

concurrency:  # https://stackoverflow.com/questions/66335225#comment133398800_72408109
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  wheel:
    name: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.manylinux || 'auto' }}
    strategy:
      fail-fast: false
      matrix:
        # Keep in sync with tests.yml
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13', '3.13t']
        include:
        - { os: macos-15,     target: x86_64 }
        - { os: macos-15,     target: aarch64 }
        - { os: ubuntu-24.04, target: x86_64 }
        - { os: ubuntu-24.04, target: aarch64 }
        - { os: ubuntu-24.04, target: i686 }
        - { os: ubuntu-24.04, target: armv7 }
        - { os: ubuntu-24.04, target: ppc64le }
        - { os: ubuntu-24.04, target: s390x }
        - { os: ubuntu-24.04, target: x86_64,  manylinux: musllinux_1_1 }
        - { os: ubuntu-24.04, target: aarch64, manylinux: musllinux_1_1 }
        - { os: windows-2025, target: x86_64 }
        - { os: windows-2025, target: i686 }

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ ( startsWith(matrix.os, 'windows') && matrix.target == 'i686' ) && 'x86' || null }}

    - name: Add python lib to PATH
      if: startsWith(matrix.os, 'windows')
      run: Add-Content $env:GITHUB_PATH "${{ env.pythonLocation }}\lib"

    - uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: ${{ matrix.manylinux || 'auto' }}
        args: --release --out dist --interpreter ${{ matrix.python-version }}
        rust-toolchain: stable
        docker-options: -e CI

    - run: ${{ ( startsWith(matrix.os, 'windows') && 'dir') || 'ls -ltra' }} dist/

    - uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.python-version }}-${{ matrix.manylinux || 'auto' }}
        path: dist

  sdist:
    name: sdist
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - uses: PyO3/maturin-action@v1
      with:
        command: sdist
        args: --out dist
        rust-toolchain: stable

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist

  publish:
    if: github.event_name == 'release'
    needs: [wheel, sdist]
    runs-on: ubuntu-24.04

    permissions:
      contents: write  # softprops/action-gh-release
      id-token: write  # pypa/gh-action-pypi-publish

    steps:
    - uses: actions/download-artifact@v4
      with:
        path: dist/
        pattern: dist-*
        merge-multiple: true

    - run: ls -ltra dist/

    - name: Upload release assets
      uses: softprops/action-gh-release@v2.2.0
      with:
        files: dist/*

    # trusted publisher in https://pypi.org/manage/project/blake3/settings/publishing/
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.3
      with:
        skip-existing: true
